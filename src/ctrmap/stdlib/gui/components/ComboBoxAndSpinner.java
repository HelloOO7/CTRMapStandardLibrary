package ctrmap.stdlib.gui.components;

import ctrmap.stdlib.gui.FormattingUtils;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class ComboBoxAndSpinner extends javax.swing.JPanel {

	private DefaultComboBoxModel<String> mdl = new DefaultComboBoxModel<String>();
	private boolean doChanges = true;
	
	private List<ChangeListener> listeners = new ArrayList<>();

	/**
	 * Creates new form ComboBoxAndSpinner
	 */
	public ComboBoxAndSpinner() {
		initComponents();
		comboBox.setModel(mdl);
		spinner.addChangeListener(new ChangeListener() {
			@Override
			public void stateChanged(ChangeEvent e) {
				if (doChanges) {
					doChanges = false;
					int val = ((Number) spinner.getValue()).intValue();
					if (val >= 0 && val < comboBox.getItemCount()) {
						comboBox.setSelectedIndex(val);
					} else {
						comboBox.setSelectedIndex(-1);
					}
					for (ChangeListener l : listeners){
						l.stateChanged(e);
					}
					doChanges = true;
				}
			}
		});
	}
	
	public JComboBox getCB(){
		return comboBox;
	}
	
	public void setEditable(boolean v){
		comboBox.setEditable(v);
	}

	public void loadComboBoxValues(Enum[] enumValues, boolean friendlize) {
		mdl.removeAllElements();
		for (Enum v : enumValues){
			if (friendlize){
				mdl.addElement(FormattingUtils.getFriendlyEnum(v));
			}
			else {
				mdl.addElement(v.toString());
			}
		}
	}
	
	public void loadComboBoxValues(String[] values) {
		mdl.removeAllElements();
		for (String s : values) {
			mdl.addElement(s);
		}
	}
	
	public void clear(){
		comboBox.removeAllItems();
	}

	public void addChangeListener(ChangeListener cl) {
		if (cl != null && !listeners.contains(cl)){
			listeners.add(cl);
		}
	}

	public int getValueCB() {
		return comboBox.getSelectedIndex();
	}

	public int getValueSpinner() {
		return ((Number) spinner.getValue()).intValue();
	}

	public void setValue(int val) {
		spinner.setValue(val);
	}
	
	public void setMaximumRowCount(int val){
		comboBox.setMaximumRowCount(val);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBox = new javax.swing.JComboBox<>();
        spinner = new javax.swing.JSpinner();

        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        spinner.setModel(new javax.swing.SpinnerNumberModel());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBox, 0, 165, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
		if (doChanges) {
			doChanges = false;
			spinner.setValue(comboBox.getSelectedIndex());
			for (ChangeListener l : listeners){
				l.stateChanged(new ChangeEvent(this));
			}
			doChanges = true;
		}
    }//GEN-LAST:event_comboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JSpinner spinner;
    // End of variables declaration//GEN-END:variables
}
